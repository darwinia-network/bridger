name: Rustdocs

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [master]

jobs:

  build-rust-docs-frame:
    name: Build rust docs (frame)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
      - name: Build rust docs
        run: |
          cd frame
          cargo doc --all --no-deps --release

      - name: Collect docs
        run: |
          mkdir rust_docs
          mv frame/target/doc rust_docs/frame

      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: shared-artifact
          path: rust_docs

  build-rust-docs-bridge:
    name: Build rust docs (${{ matrix.package }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
         - crab-crabparachain
         - darwinia-crab
         - darwinia-ethereum-pow
         - pangolin-pangoro
         - pangolin-ropsten
         - pangoro-chapel
         - pangoro-goerli
         - template
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
      - name: Build rust docs
        run: |
          cd bridges/${{ matrix.package }}
          cargo doc --all --no-deps --release
      - name: Collect docs
        run: |
          mkdir rust_docs
          mv bridges/${{ matrix.package }}/target/doc rust_docs/${{ matrix.package }}

      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: shared-artifact
          path: rust_docs

  deploy-rust-docs:
    name: Deploy rust docs
    runs-on: ubuntu-latest
    steps:

      - uses: actions/download-artifact@v2
        with:
          name: shared-artifact
          path: rust_docs

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install vercel-ci
        run: npm i -g vercel

      - name: Deploy rust docs
        run: |
          mv .maintain/rust-docs/* rust_docs/
          mv rust_docs bridger
          cd bridger
          vercel --token ${{ secrets.VERCEL_TOKEN }} --scope itering link --confirm
          vercel --token ${{ secrets.VERCEL_TOKEN }} --scope itering deploy --prod

