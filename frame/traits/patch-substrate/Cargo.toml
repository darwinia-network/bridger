[package]
name          = "patch-substrate"
authors       = ["Darwinia Network <hello@darwinia.network>"]
description   = "Darwinia bridger"
documentation = "https://rust-docs.darwinia.network/bridger"
edition       = "2021"
homepage      = "https://github.com/darwinia-network/bridger"
include       = ["Cargo.toml", "**/*.rs", "README.md", "LICENSE"]
keywords      = ["substrate", "darwinia"]
license       = "MIT"
readme        = 'README.md'
repository    = "https://github.com/darwinia-network/bridger"
version       = "0.7.3"

[dependencies]
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = [
  "derive",
  "max-encoded-len",
] }
scale-info = { version = "2.1.1", default-features = false, features = ["derive"] }
log = { version = "0.4.17", default-features = false }
serde = { version = "1.0.136", optional = true, features = ["derive"] }
byteorder = { version = "1.3.2", default-features = false }
primitive-types = { version = "0.11.1", default-features = false, features = ["codec", "scale-info"] }
impl-serde = { version = "0.3.0", optional = true }
wasmi = { version = "0.13", optional = true }
hash-db = { version = "0.15.2", default-features = false }
hash256-std-hasher = { version = "0.15.2", default-features = false }
base58 = { version = "0.2.0", optional = true }
rand = { version = "0.7.3", optional = true, features = ["small_rng"] }
substrate-bip39 = { version = "0.4.4", optional = true }
tiny-bip39 = { version = "0.8.2", optional = true }
regex = { version = "1.5.4", optional = true }
num-traits = { version = "0.2.8", default-features = false }
zeroize = { version = "1.4.3", default-features = false }
secrecy = { version = "0.8.0", default-features = false }
lazy_static = { version = "1.4.0", default-features = false, optional = true }
parking_lot = { version = "0.12.1", optional = true }
sp-std = { version = "4.0.0", default-features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.30" }
sp-debug-derive = { version = "4.0.0", default-features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.30" }
sp-storage = { version = "6.0.0", default-features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.30" }
sp-externalities = { version = "0.12.0", optional = true, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.30" }
parity-util-mem = { version = "0.11.0", default-features = false, features = ["primitive-types"] }
futures = { version = "0.3.21", optional = true }
dyn-clonable = { version = "0.9.0", optional = true }
thiserror = { version = "1.0.30", optional = true }
bitflags = "1.3"

# full crypto
array-bytes = { version = "4.1", optional = true }
ed25519-zebra = { version = "3.0.0", default-features = false, optional = true}
blake2 = { version = "0.10.4", default-features = false, optional = true }
schnorrkel = { version = "0.9.1", features = [
  "preaudit_deprecated",
  "u64_backend",
], default-features = false, optional = true }
libsecp256k1 = { version = "0.7", default-features = false, features = ["static-context"], optional = true }
merlin = { version = "2.0", default-features = false, optional = true }
secp256k1 = { version = "0.24.0", default-features = false, features = ["recovery", "alloc"], optional = true }
ss58-registry = { version = "1.29.0", default-features = false }
sp-core-hashing = { version = "4.0.0", git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.30", default-features = false, optional = true }
sp-runtime-interface = { version = "6.0.0", default-features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.30" }

sp-core = { version = "6.0.0", default_features = false, git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.30" }

[dev-dependencies]
sp-serializer = { version = "4.0.0-dev", git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.30" }
rand = "0.7.2"
criterion = "0.3.3"
serde_json = "1.0"
sp-core-hashing-proc-macro = { version = "5.0.0", git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.30" }

#[[bench]]
#name = "bench"
#harness = false

#[lib]
#bench = false

[features]
default = ["std"]
std = [
  "parity-util-mem/std",
  "merlin?/std",
  "full_crypto",
  "log/std",
  "thiserror",
  "wasmi",
  "lazy_static",
  "parking_lot",
  "primitive-types/std",
  "primitive-types/serde",
  "primitive-types/byteorder",
  "primitive-types/rustc-hex",
  "impl-serde",
  "codec/std",
  "scale-info/std",
  "hash256-std-hasher/std",
  "hash-db/std",
  "sp-std/std",
  "serde",
  "blake2/std",
  "array-bytes",
  "ed25519-zebra",
  "base58",
  "substrate-bip39",
  "tiny-bip39",
  "byteorder/std",
  "rand",
  "schnorrkel/std",
  "regex",
  "num-traits/std",
  "secp256k1/std",
  "secp256k1/global-context",
  "sp-core-hashing/std",
  "sp-debug-derive/std",
  "sp-externalities",
  "sp-storage/std",
  "sp-runtime-interface/std",
  "ss58-registry/std",
  "zeroize/alloc",
  "secrecy/alloc",
  "futures",
  "futures/thread-pool",
  "libsecp256k1/std",
  "dyn-clonable",
  "sp-core/std",
]

# This feature enables all crypto primitives for `no_std` builds like microcontrollers
# or Intel SGX.
# For the regular wasm runtime builds this should not be used.
full_crypto = [
  "array-bytes",
  "ed25519-zebra",
  "blake2",
  "schnorrkel",
  "libsecp256k1",
  "secp256k1",
  "sp-core-hashing",
  "sp-runtime-interface/disable_target_static_assertions",
  "merlin",
]
