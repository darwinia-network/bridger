name: Staging

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  OPENSSL_DIR: /home/runner/openssl
  OPENSSL_STATIC: 1

jobs:
  build-package:
    name: Build package
    runs-on: ubuntu-latest
    container:
      image: rust:1
    steps:
      - uses: actions/checkout@v2

      - name: Specify toolchain
        run: |
          rustup default nightly
          rustup target add wasm32-unknown-unknown

      - name: Build openssl
        run: |
          curl https://www.openssl.org/source/openssl-1.1.1l.tar.gz | tar xz
          cd openssl-1.1.1l
          ./config --prefix=${{ env.OPENSSL_DIR }} -static
          make -j4
          make install

      - name: Cache target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-bridger-${{ hashFiles('Cargo.lock') }}
          restore-keys: ${{ runner.os }}-bridger-

      - name: Build bridger
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Collect shared
        run: |
          mkdir -p shared
          mv target/x86_64-unknown-linux-gnu/release/bridger shared/

      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: bridger-artifact
          path: shared

      - name: Optimize cache
        run: .maintain/optimize-cache.sh || exit 0

  build-image:
    name: Build image
    runs-on: ubuntu-latest
    needs: [build-package]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: bridger-artifact
          path: shared

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.QUAY_IO_BOT_USERNAME }}
          password: ${{ secrets.QUAY_IO_BOT_PASSWORD }}
          registry: quay.io

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7

      - name: Build and publish docker image
        run: |
          IMAGE_NAME=bridger
          IMAGE_PREFIX=quay.io/darwinia-network
          IMAGE_PUSH_NAME_SHA=${IMAGE_PREFIX}/${IMAGE_NAME}:sha-${SHA}

          chmod +x shared/bridger
          docker build \
            -t ${IMAGE_PUSH_NAME_SHA} \
            -f .maintain/docker/Dockerfile \
            .

          docker push ${IMAGE_PUSH_NAME_SHA}

  clean-artifacts:
    name: Clean artifacts
    runs-on: ubuntu-latest
    needs: [build-image]
    if: always()
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: bridger-artifact
