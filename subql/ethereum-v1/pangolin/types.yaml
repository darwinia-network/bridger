types:
  AccountData:
    feeFrozen: Balance
    free: Balance
    reserved: Balance
    freeKton: Balance
    reservedKton: Balance
    miscFrozen: Balance
  AccountInfo: AccountInfoWithTripleRefCount
  AccountInfoWithTripleRefCount:
    consumers: RefCount
    data: AccountData
    nonce: Index
    providers: RefCount
    sufficients: RefCount
  AddressT: '[u8; 20; AddressT]'
  Announcement: ProxyAnnouncement
  AuthorityId: '[u8;32]'
  AuthoritySignature: '[u8;64]'
  BSCHeader:
    parentHash: H256
    uncleHash: H256
    coinbase: EthereumAddress
    stateRoot: H256
    transactionsRoot: H256
    receiptsRoot: H256
    logBloom: Bloom
    difficulty: U256
    number: u64
    gasLimit: U256
    gasUsed: U256
    timestamp: u64
    extraData: Bytes
    mixDigest: H256
    nonce: Bytes
  BabeEpochConfiguration: 'Null'
  BalanceInfo: '{}'
  BalanceLock:
    id: LockIdentifier
    lockFor: LockFor
    reasons: Reasons
  Bloom: '[u8; 256; Bloom]'
  BridgeMessageId: '(LaneId, MessageNonce)'
  ChainProperties:
    ss58Format: Option<u8>
    tokenDecimals: Option<Vec<u32>>
    tokenSymbol: Option<Vec<Text>>
  Common:
    amount: Balance
  DepositId: U256
  EcdsaAddress: EthereumAddress
  EcdsaMessage: H256
  EcdsaSignature: '[u8; 65; EcdsaSignature]'
  ElectionCompute:
    _enum:
      - OnChain
      - Signed
      - Authority
  ElectionResultT:
    electedStashes: Vec<AccountId>
    exposures: Vec<(AccountId, ExposureT)>
    compute: ElectionCompute
  EthashProof:
    dagNodes: (H512, H512)
    proof: Vec<H128>
  EthereumAddress: H160
  EthereumBlockNumber: u64
  EthereumHeader:
    parentHash: H256
    timestamp: u64
    number: EthereumBlockNumber
    author: EthereumAddress
    transactionsRoot: H256
    unclesHash: H256
    extraData: Bytes
    stateRoot: H256
    receiptsRoot: H256
    logBloom: Bloom
    gasUsed: U256
    gasLimit: U256
    difficulty: U256
    seal: Vec<Bytes>
    baseFeePerGas: Option<U256>
    blockHash: Option<H256>
  EthereumNetwork:
    _enum:
      Mainnet: 'Null'
      Ropsten: 'Null'
  EthereumReceipt:
    gasUsed: U256
    logBloom: Bloom
    logs: Vec<LogEntry>
    outcome: TransactionOutcome
  EthereumReceiptProof:
    index: u64
    proof: Bytes
    headerHash: H256
  EthereumReceiptProofThing: (EthereumHeader, EthereumReceiptProof, MMRProof)
  EthereumRelayHeaderParcel:
    header: EthereumHeader
    parentMmrRoot: H256
  EthereumRelayProofs:
    ethashProof: Vec<EthashProof>
    mmrProof: Vec<H256>
  EthereumTransactionIndex: (H256, u64)
  Exposure: ExposureT
  ExposureT:
    ownRingBalance: Compact<Balance>
    ownKtonBalance: Compact<Balance>
    ownPower: Power
    totalPower: Power
    others: Vec<IndividualExposure>
  Fee:
    amount: Balance
  H128: '[u8; 16; H128]'
  IndividualExposure:
    who: AccountId
    ringBalance: Compact<Balance>
    ktonBalance: Compact<Balance>
    power: Power
  InProcessOrders:
    orders: Vec<LaneId, MessageNonce>
  KtonBalance: Balance
  LockFor:
    _enum:
      Common: Common
      Staking: StakingLock
  LogEntry: '{}'
  MMRProof:
    memberLeafIndex: u64
    lastLeafIndex: u64
    proof: Vec<H256>
  MMRProofResult:
    mmrSize: u64
    proof: Text
  MMRRoot: Hash
  MappedRing: u128
  MerkleMountainRangeRootLog:
    prefix: '[u8; 4; Prefix]'
    ParentMmrRoot: Hash
  MessageId: (LaneId, MessageNonce)
  MmrNodesPruningConfiguration:
    step: NodeIndex
    progress: NodeIndex
    lastPosition: NodeIndex
  MmrRootToSign:
    mmrRoot: Hash
    signatures: Vec<(AccountId, EcdsaSignature)>
  NodeIndex: u64
  OpCode: '[u8; 4; OpCode]'
  Order:
    lane: LaneId
    message: MessageNonce
    sentTime: BlockNumber
    confirmTime: BlockNumber
    lockedCollateral: Balance
    assignedRelayers: Vec<PriorRelayer>
  OtherAddress:
    _enum:
      Eth: EthereumAddress
      Tron: TronAddress
  OtherSignature:
    _enum:
      Eth: EcdsaSignature
      Tron: EcdsaSignature
  OutboundLaneData:
    oldestUnprunedNonce: MessageNonce
    latestGeneratedNonce: MessageNonce
    latestReceivedNonce: MessageNonce
  PalletId: LockIdentifier
  Power: u32
  PowerOf:
    power: Power
  PriorRelayer:
    id: AccountId
    fee: Balance
    valid_range: BlockNumber
  ProxyType:
    _enum:
      Any: 'Null'
      NonTransfer: 'Null'
      Governance: 'Null'
      Staking: 'Null'
      IdentityJudgement: 'Null'
      EthereumBridge: 'Null'
  RKT:
    r: Balance
    k: Balance
  Reasons:
    _enum:
      - Fee
      - Misc
      - All
  RedeemFor:
    _enum:
      Token: 'Null'
      Deposit: 'Null'
  Relayer:
    id: AccountId
    collateral: Balance
    fee: Balance
  RelayAffirmationId:
    relayHeaderId: EthereumBlockNumber
    round: u32
    index: u32
  RelayAffirmationT:
    relayer: AccountId
    relayHeaderParcels: EthereumRelayHeaderParcel
    bond: Balance
    maybeExtendedRelayAffirmationId: Option<RelayAffirmationId>
    verified: bool
  RelayAuthorityMessage: EcdsaMessage
  RelayAuthoritySignature: EcdsaSignature
  RelayAuthoritySigner: EcdsaAddress
  RelayAuthorityT:
    accountId: AccountId
    signer: EthereumAddress
    stake: Balance
    term: BlockNumber
  RelayHeaderId: EthereumBlockNumber
  RelayHeaderParcel: EthereumRelayHeaderParcel
  RelayProofs: EthereumRelayProofs
  RelayVotingState:
    ayes: Vec<AccountId>
    nays: Vec<AccountId>
  RingBalance: Balance
  ScheduledAuthoritiesChangeT:
    nextAuthorities: Vec<RelayAuthorityT>
    deadline: BlockNumber
  Signer: EthereumAddress
  SpanRecord:
    slashed: RKT
    paidOut: RKT
  SpecVersion: u32
  StakingBalanceT:
    _enum:
      RingBalance: Balance
      KtonBalance: Balance
  StakingLedgerT:
    stash: AccountId
    activeRing: Compact<Balance>
    activeDepositRing: Compact<Balance>
    activeKton: Compact<Balance>
    depositItems: Vec<TimeDepositItem>
    ringStakingLock: StakingLock
    ktonStakingLock: StakingLock
    claimedRewards: Vec<EraIndex>
  StakingLock:
    stakingAmount: Balance
    unbondings: Vec<Unbonding>
  Status:
    _enum:
      Free: 'Null'
      Reserved: 'Null'
  Term: BlockNumber
  TimeDepositItem:
    value: Compact<Balance>
    startTime: Compact<TsInMs>
    expireTime: Compact<TsInMs>
  TokenMessageId: '[u8; 16; TokenMessageId]'
  TokenMetadata:
    tokenType: u32
    address: H160
    name: Vec<u8>
    symbol: Vec<u8>
    decimal: u8
  TransactionOutcome: '{}'
  TreasuryProposal:
    proposer: AccountId
    beneficiary: AccountId
    ringValue: Balance
    ringBond: Balance
    ktonValue: Balance
    ktonBond: Balance
  TronAddress: EthereumAddress
  TsInMs: u64
  UnappliedSlash:
    validator: AccountId
    own: RKT
    others: Vec<(AccountId, RKT)>
    reporters: Vec<AccountId>
    payout: RKT
  Unbonding:
    amount: Balance
    moment: BlockNumber
  UsableBalance:
    usableBalance: Balance
  ValidatorPrefs: ValidatorPrefsWithBlocked
